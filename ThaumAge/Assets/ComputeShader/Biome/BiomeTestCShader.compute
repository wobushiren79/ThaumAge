// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel StartCreate

#include "../BiomeBaseCShader.compute"

//根据生态生成数据 测试用
int4 HandleBiome(BlockTerrainData blockTerrainData)
{
	int4 targetBlockData = int4(0, 0, 0, 0);
	//如果大于地面高度
	if (blockTerrainData.blockPos.y > blockTerrainData.terrainHeight)
	{
		targetBlockData = int4(0, 0, 0, 1);
	}
	else if (blockTerrainData.blockPos.y == blockTerrainData.terrainHeight)
	{
		//使用荒草泥土
		targetBlockData = int4(101, 0, 0, 1);
	}
	else if (blockTerrainData.blockPos.y < blockTerrainData.terrainHeight && blockTerrainData.blockPos.y > blockTerrainData.terrainHeight - 6)
	{
		//使用泥土
		targetBlockData = int4(4, 0, 0, 1);
	}
	else
	{
		//使用石头
		targetBlockData = int4(5, 0, 0, 1);
	}
	return targetBlockData;
}

//开始生成数据
[numthreads(8, 8, 8)]
void StartCreate(uint3 id : SV_DispatchThreadID)
{
	BlockTerrainData blockTerrainData = CreateBaseData(id);
	//如果XZ大于W 则不处理
	if (blockTerrainData.validState == 0)
		return;
	//获取生态方块数据
	int4 biomeBlockData = int4(0, 0, 0, 0);
	biomeBlockData = HandleBiome(blockTerrainData);

	SetBlockData(blockTerrainData, biomeBlockData);
}