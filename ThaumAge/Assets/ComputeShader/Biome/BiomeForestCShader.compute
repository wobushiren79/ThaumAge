// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel StartCreate

#include "../BiomeBaseCShader.compute"

int4 HandleBiome(BlockTerrainData blockTerrainData)
{
    bool isOcean = blockTerrainData.isOcean;
	bool isOceanDown = blockTerrainData.isOceanDown;
	float3 blockPos = blockTerrainData.blockPos;
	int blockIndex = blockTerrainData.blockIndex;
	uint terrainHeight = blockTerrainData.terrainHeight;
	bool isCave = blockTerrainData.isCave;
	bool isCaveDown = blockTerrainData.isCaveDown;
	float weightOceanTarget = blockTerrainData.selectedNoise.oceanThreshold;
	float weightOcean = blockTerrainData.weightOcean;
	float weightOceanDown = blockTerrainData.weightOceanDown;

	if (isOcean) 
	{
		//如果又是水 又是洞穴 并且下方也是
		if (isCave)
		{
			return int4(4, 0, 0, 1);
		}
		else if (isCaveDown)
		{
			return int4(4, 0, 0, 1);
		}
		//靠近水区域显示沙子
		if(weightOcean > weightOceanTarget && weightOcean < weightOceanTarget + 0.05f)
		{
			return int4(3, 0, 0, 1);
		}
		return int4(9001, 0, 0, 1);
	}
	if (isCave)
	{
		return int4(0, 0, 0, 1);
	}
	int4 targetBlockData = int4(0, 0, 0, 0);
	//如果大于地面高度
	if (blockPos.y > terrainHeight)
	{
		//如果是地面上一格
	    if (blockPos.y == terrainHeight + 1)
		{
			//如果下方不是洞穴 并且也不是水
			if (!isCaveDown && !isOceanDown)
			{
				//是否生成草
				bool isCreateWeedWild = GenerateRandom(seed,blockPos.x / 10,blockPos.z / 10)  > 0.7;			
				if (isCreateWeedWild)
				{
					float randomType = GenerateRandom(seed,blockPos.x / 11,blockPos.z / 11) ;
					if (randomType > 0 && randomType <= 0.25)
					{
						targetBlockData = int4(3001, 0, 0, 1);
					}
					else if (randomType > 0.25 && randomType <= 0.5)
					{
						targetBlockData = int4(3002, 0, 0, 1);
					}
					else if (randomType > 0.5 && randomType <= 0.75)
					{
						targetBlockData = int4(3003, 0, 0, 1);
					}
					else 
					{
						targetBlockData = int4(3004, 0, 0, 1);
					}
					return targetBlockData;
				}
								
				//是否成成花
				bool isCreateFlower = GenerateRandom(seed,blockPos.x / 9,blockPos.z / 9)  > 0.995;
			    if (isCreateFlower)
				{
					float randomType = GenerateRandom(seed,blockPos.x / 12,blockPos.z / 12) ;
					if (randomType > 0 && randomType <= 0.33)
					{
						targetBlockData = int4(3111, 0, 0, 1);
					}
					else if (randomType > 0.33 && randomType <= 0.66)
					{
						targetBlockData = int4(3112, 0, 0, 1);
					}
					else
					{
						targetBlockData = int4(3113, 0, 0, 1);
					}
					return targetBlockData;
				}

				//是否生成蘑菇
				bool isCreateMushroom = GenerateRandom(seed,blockPos.x / 8,blockPos.z / 8)  > 0.995;
				if(isCreateMushroom)
				{
					float randomType = GenerateRandom(seed,blockPos.x / 13,blockPos.z / 13) ;
					if (randomType > 0 && randomType <= 0.25)
					{
						targetBlockData = int4(3211, 0, 0, 1);
					}
					else if (randomType > 0.25 && randomType <= 0.5)
					{
						targetBlockData = int4(3212, 0, 0, 1);
					}
					else if(randomType > 0.5 && randomType <= 0.75)
					{
						targetBlockData = int4(3213, 0, 0, 1);
					}
					else
					{
						targetBlockData = int4(3202, 0, 0, 1);
					}
					return targetBlockData;
				}

				//是否生成浆果
				bool isCreateBerryBush = GenerateRandom(seed,blockPos.x / 7,blockPos.z / 7)  > 0.995;
				if(isCreateBerryBush)
				{			
					float randomType = GenerateRandom(seed,blockPos.x / 14,blockPos.z / 14) ;
					if (randomType > 0 && randomType <= 0.5)
					{
						targetBlockData = int4(5902, 0, 0, 1);
					}
					else
					{
						targetBlockData = int4(5904, 0, 0, 1);
					}
					return targetBlockData;
				}

				//是否生成树
				bool isCreateTree = GenerateRandom(seed, blockPos.x, blockPos.z) > 0.98;
				if (isCreateTree)
				{
					targetBlockData = int4(1001, 1, 0, 1);
					return targetBlockData;
				}
				
				//是否生成台石
				bool isCreateStoneMoss = GenerateRandom(seed, blockPos.x / 2, blockPos.z / 2) > 0.995;
				if(isCreateStoneMoss)
				{
					targetBlockData = int4(6, 0, 0, 1);
					return targetBlockData;
				}

				//是否生成枯木
				bool isCreateDeadWood = GenerateRandom(seed, blockPos.x / 3, blockPos.z / 3) > 0.9965;
				if(isCreateDeadWood)
				{
					targetBlockData = int4(3301, 1001, 0, 1);
					return isCreateDeadWood;
				}		

				///是否生成倒下的树木
				bool isCreateFallDownTree = GenerateRandom(seed, blockPos.x / 4, blockPos.z / 4) > 0.995;
				if(isCreateFallDownTree)
				{
					targetBlockData = int4(1001, 1002, 0, 1);
					return isCreateFallDownTree;
				}

				//是否生成元素花
				bool isCreateElementFlower = GenerateRandom(seed, blockPos.x / 5, blockPos.z / 5) > 0.998;
				if(isCreateElementFlower)
				{
					float randomType = GenerateRandom(seed,blockPos.x / 15,blockPos.z / 15) ;
					if (randomType > 0 && randomType <= 0.5)
					{
						targetBlockData = int4(3122, 0, 0, 1);
					}
					else
					{
						targetBlockData = int4(3123, 0, 0, 1);
					}
					return targetBlockData;
				}
			}
			else if(isOceanDown)
			{
				//靠近水区域显示沙子
				if(weightOceanDown > weightOceanTarget && weightOceanDown < weightOceanTarget + 0.05f)
				{

				}
				else
				{
					//是否生成荷叶
					bool isCreateLotusLeaf = GenerateRandom(seed, blockPos.x, blockPos.z) > 0.9;
					if(isCreateLotusLeaf)
					{
						targetBlockData = int4(2221, 0, 0, 1);
					}
				}			
			}
			else
			{
				targetBlockData = int4(0, 0, 0, 1);
			}
		}
		else
		{
			targetBlockData = int4(0, 0, 0, 1);
		}
	}
	else if (blockPos.y == terrainHeight)
	{
		//使用荒草泥土
		targetBlockData = int4(101, 0, 0, 1);
	}
	else if (blockPos.y < terrainHeight && blockPos.y > terrainHeight - 6)
	{
		//使用泥土
		targetBlockData = int4(4, 0, 0, 1);
	}
	else
	{
		//使用石头
		targetBlockData = int4(5, 0, 0, 1);
	}
	return targetBlockData;
}

//开始生成数据
[numthreads(8, 8, 8)]
void StartCreate(uint3 id : SV_DispatchThreadID)
{
	BlockTerrainData blockTerrainData = CreateBaseData(id);
	//如果XZ大于W 则不处理
	if (blockTerrainData.validState == 0)
		return;
	//获取生态方块数据
	int4 biomeBlockData = int4(0, 0, 0, 0);
	biomeBlockData = HandleBiome(blockTerrainData);

	SetBlockData(blockTerrainData, biomeBlockData);
}