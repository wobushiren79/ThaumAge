// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel StartCreate

#include "../BiomeBaseCShader.compute"

int4 HandleBiome(BlockTerrainData blockTerrainData)
{
    bool isOcean = blockTerrainData.isOcean;
	bool isOceanDown = blockTerrainData.isOceanDown;
	float3 blockPos = blockTerrainData.blockPos;
	int blockIndex = blockTerrainData.blockIndex;
	uint terrainHeight = blockTerrainData.terrainHeight;
	bool isCave = blockTerrainData.isCave;
	bool isCaveDown = blockTerrainData.isCaveDown;
	float weightOceanTarget = blockTerrainData.selectedNoise.oceanThreshold;
	float weightOcean = blockTerrainData.weightOcean;
	float weightOceanDown = blockTerrainData.weightOceanDown;

 	int oceanHeight = 64;
	if (isCave && blockPos.y > oceanHeight)
	{
		return int4(0, 0, 0, 1);
	}
	int4 targetBlockData = int4(0, 0, 0, 0);
	//如果大于地面高度
	if (blockPos.y >= terrainHeight)
	{
		if (blockPos.y == terrainHeight)
		{
			if(blockPos.y > oceanHeight + 1)
			{
				//使用草地
				targetBlockData = int4(104, 0, 0, 1);
			}
			else if(blockPos.y >= oceanHeight - 1 && blockPos.y <= oceanHeight)
			{
				//使用冰块
				targetBlockData = int4(8, 0, 0, 1);
			}
			else if(blockPos.y > oceanHeight && blockPos.y <= oceanHeight + 1)
			{
				//使用雪块
				targetBlockData = int4(9, 0, 0, 1);
			}
			else
			{
				//使用沙子
				targetBlockData = int4(3, 0, 0, 1);
			}		
		}
		//如果是地面上一格
	 	else if (blockPos.y == terrainHeight + 1)
		{	
			if(blockPos.y > oceanHeight + 1)
			{
				//创建草
				bool isCreateWeedWild = GenerateRandom(seed, blockPos.x / 11, blockPos.z / 11) > 0.8;
				if (isCreateWeedWild)
				{
					float randomType =  GenerateRandom(seed, blockPos.x / 21, blockPos.z / 21);
					if (randomType > 0 && randomType <= 0.25)
					{
						targetBlockData = int4(3021, 0, 0, 1);
					}
					else if (randomType > 0.25 && randomType <= 0.5)
					{
						targetBlockData = int4(3022, 0, 0, 1);
					}
					else if (randomType > 0.5 && randomType <= 0.75)
					{
						targetBlockData = int4(3023, 0, 0, 1);
					}
					else
					{
						targetBlockData = int4(3024, 0, 0, 1);
					}
					return targetBlockData;
				}

				//创建冰块
				bool isCreateIconStone = _fnlSingleSimplex2D(seed, blockPos.x / 9, blockPos.z / 9)  > 0.3;
				if(isCreateIconStone  && blockPos.y > oceanHeight + 1)
				{	
					targetBlockData = int4(7009, 0, 0, 1);	
					return targetBlockData;
				}

				//是否生成树
				bool isCreateTree = GenerateRandom(seed, blockPos.x, blockPos.z) > 0.997;
				if (isCreateTree)
				{
					//生成椰子树
					//targetBlockData = int4(1005, 11, 0, 1);
					return targetBlockData;
				}
			}	
			else if(blockPos.y <= oceanHeight)
			{				
				if(blockPos.y < oceanHeight / 2)
				{
					bool isCreateFlower = GenerateRandom(seed, blockPos.x / 2, blockPos.z / 2) > 0.95;
	
					if (isCreateFlower)
					{
						float randomType = GenerateRandom(seed, blockPos.x / 12, blockPos.z / 12) ;
						if (randomType > 0 && randomType <= 0.33)
						{
							targetBlockData = int4(3091, 0, 0, 1);
						}
						else if (randomType > 0.33 && randomType <= 0.66)
						{
							targetBlockData = int4(3092, 0, 0, 1);
						}
						else
						{
							targetBlockData = int4(3093, 0, 0, 1);
						}
						return targetBlockData;
					}
					bool isCreateSeaweed = GenerateRandom(seed, blockPos.x / 11, blockPos.z / 11) > 0.75;
					if (isCreateSeaweed)
					{
						targetBlockData = int4(3101, 1004, 0, 1);
						return targetBlockData;
					}

					//使用海水
					targetBlockData = int4(9001, 0, 0, 1);
					return targetBlockData;
				}
				else
				{
					//使用冰块
					if(blockPos.y == oceanHeight)
					{
						targetBlockData = int4(8, 0, 0, 1);
					}
					else
					{
						targetBlockData = int4(4, 0, 0, 1);
					}		
				}			
			}
			else
			{
				targetBlockData = int4(0, 0, 0, 1);
			}
		}
		else
		{
			if(blockPos.y <= oceanHeight)
			{
				//如果是海面 并且靠近陆地 使用冰面
				if(blockPos.y == oceanHeight && oceanHeight - terrainHeight < 5)
				{
					targetBlockData = int4(8, 0, 0, 1);
				}
				else
				{	//使用海水
					targetBlockData = int4(9001, 0, 0, 1);
				}		
			}
			//如果是靠近陆地的冰面 有一定概率生成半冰
			else if(blockPos.y == oceanHeight + 1 && oceanHeight - terrainHeight < 5)
			{		
				bool isCreateIceStoneHalf = _fnlSingleSimplex2D(seed, blockPos.x / 12, blockPos.z / 12) > 0.5;
				if(isCreateIceStoneHalf)
				{
					targetBlockData = int4(7008, 0, 0, 1);
				}
				else
				{
					targetBlockData = int4(0, 0, 0, 1);
				}
			}
			else
			{
				targetBlockData = int4(0, 0, 0, 1);
			}	
		}
	}
	else if (blockPos.y < terrainHeight && blockPos.y > terrainHeight - 6)
	{
		//使用泥土
		targetBlockData = int4(4, 0, 0, 1);
	}
	else
	{
		//使用石头
		targetBlockData = int4(5, 0, 0, 1);
	}
	return targetBlockData;
}

//开始生成数据
[numthreads(8, 8, 8)]
void StartCreate(uint3 id : SV_DispatchThreadID)
{
	BlockTerrainData blockTerrainData = CreateBaseData(id);
	//如果XZ大于W 则不处理
	if (blockTerrainData.validState == 0)
		return;
	//获取生态方块数据
	int4 biomeBlockData = int4(0, 0, 0, 0);
	biomeBlockData = HandleBiome(blockTerrainData);

	SetBlockData(blockTerrainData, biomeBlockData);
}