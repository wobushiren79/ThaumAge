// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel StartCreate

#include "../BiomeBaseCShader.compute"

int4 HandleBiome(BlockTerrainData blockTerrainData)
{
    bool isOcean = blockTerrainData.isOcean;
	bool isOceanDown = blockTerrainData.isOceanDown;
	float3 blockPos = blockTerrainData.blockPos;
	int blockIndex = blockTerrainData.blockIndex;
	uint terrainHeight = blockTerrainData.terrainHeight;
	bool isCave = blockTerrainData.isCave;
	bool isCaveDown = blockTerrainData.isCaveDown;
	float weightOceanTarget = blockTerrainData.selectedNoise.oceanThreshold;
	float weightOcean = blockTerrainData.weightOcean;
	float weightOceanDown = blockTerrainData.weightOceanDown;

	int oceanHeight = 64;
	if (isCave && blockPos.y > oceanHeight)
	{
		return int4(0, 0, 0, 1);
	}
	int4 targetBlockData = int4(0, 0, 0, 0);
	//如果大于地面高度
	if (blockPos.y >= terrainHeight)
	{
		if (blockPos.y == terrainHeight)
		{
			//如果是水面以下
			if(blockPos.y < oceanHeight)
			{
				//使用泥土
				targetBlockData = int4(4, 0, 0, 1);
			}
			else
			{
				//使用草地
				targetBlockData = int4(101, 0, 0, 1);
			}				
		}
		//如果是地面上一格
	 	else if (blockPos.y == terrainHeight + 1)
		{	
			//如果是水面以上
			if(blockPos.y > oceanHeight)
			{
				//是否生成草草
				bool isCreateWeed = GenerateRandom(seed, blockPos.x / 10, blockPos.z / 10) > 0.8;	
				if (isCreateWeed)
				{
					float randomType = GenerateRandom(seed, blockPos.x / 11, blockPos.z / 11);
					if (randomType > 0 && randomType <= 0.25)
					{
						targetBlockData = int4(3001, 0, 0, 1);
					}
					else if (randomType > 0.25 && randomType <= 0.5)
					{
						targetBlockData = int4(3002, 0, 0, 1);
					}
					else if (randomType > 0.5 && randomType <= 0.75)
					{
						targetBlockData = int4(3003, 0, 0, 1);
					}
					else
					{
						targetBlockData = int4(3004, 0, 0, 1);
					}
					return targetBlockData;
				}

				//是否生成元素花
				bool isCreateElementFlower = GenerateRandom(seed, blockPos.x / 5, blockPos.z / 5) > 0.998;
				if(isCreateElementFlower)
				{
					float randomType = GenerateRandom(seed, blockPos.x / 12, blockPos.z / 12);
					if (randomType > 0 && randomType <= 0.5)
					{
						targetBlockData = int4(3122, 0, 0, 1);
					}
					else
					{
						targetBlockData = int4(3123, 0, 0, 1);
					}
					return targetBlockData;
				}

				targetBlockData = int4(0, 0, 0, 1);
				return targetBlockData;
			}
			else if(blockPos.y == oceanHeight)
			{				
				//如果实在水面 则随机放置荷叶
				targetBlockData = int4(9001, 0, 0, 1);
			}
			//如果是水面以下
			else
			{
				targetBlockData = int4(9001, 0, 0, 1);
			}

			//是否生成树
			bool isCreateTree = GenerateRandom(seed, blockPos.x, blockPos.z) > 0.997;
			if (isCreateTree)
			{
				//生成柳树
				targetBlockData = int4(1001, 41, 0, 1);
				return targetBlockData;
			}	
		}
		else
		{
			if(blockPos.y <= oceanHeight)
			{
				targetBlockData = int4(9001, 0, 0, 1);
			}
			//荷叶
			else if(blockPos.y == oceanHeight + 1)
			{	
				//是否生成荷叶
				bool isCreateLotusLeaf = GenerateRandom(seed, blockPos.x, blockPos.z) > 0.99;	
				if(isCreateLotusLeaf)
				{
					targetBlockData = int4(2221, 0, 0, 1);	
					return targetBlockData;
				}			
			}
			else
			{
				targetBlockData = int4(0, 0, 0, 1);
			}
		}
	}
	else if (blockPos.y < terrainHeight && blockPos.y > terrainHeight - 6)
	{
		//使用泥土
		targetBlockData = int4(4, 0, 0, 1);
	}
	else
	{
		//使用石头
		targetBlockData = int4(5, 0, 0, 1);
	}
	return targetBlockData;
}

//开始生成数据
[numthreads(8, 8, 8)]
void StartCreate(uint3 id : SV_DispatchThreadID)
{
	BlockTerrainData blockTerrainData = CreateBaseData(id);
	//如果XZ大于W 则不处理
	if (blockTerrainData.validState == 0)
		return;
	//获取生态方块数据
	int4 biomeBlockData = int4(0, 0, 0, 0);
	biomeBlockData = HandleBiome(blockTerrainData);

	SetBlockData(blockTerrainData, biomeBlockData);
}